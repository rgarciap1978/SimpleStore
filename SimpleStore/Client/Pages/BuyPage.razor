@page "/buy-page/{Id:int}"

@using SimpleStore.Client.Auth;

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IToastService ToastService
@inject NavigationManager NavigationManager
@inject ProxyProduct ProxyProduct
@inject ProxySale ProxySale

<h3>Tu compra</h3>

<div class="container">
    <div class="row align-items-center">
        <div class="col-4">
            <div class="card">
                <div class="card-body">
                    <img src="@Product.Image" alt="@Product.Name" style="width:360px;" />
                </div>
            </div>
        </div>
        <div class="col-5">
            @if (Status == BuyStatus.Resume)
            {
                <div class="card" >
                    <div class="card-body">
                        <h5 class="card-title">@Product.Name</h5>
                        <p class="card-text">@Product.Comment</p>
                    </div>
                    <div class="card-footer">
                        <div class="row">
                            <div class="col-sm">
                                <strong>$ @Product.UnitPrice</strong>
                            </div>
                            <div class="col-sm align-content-end" style="text-align:end">
                                <button class="btn btn-outline-primary" @onclick="Comprar">Comprar</button>
                            </div>
                        </div>
                    </div>
                </div>
            }
            else if (Status == BuyStatus.Compra)
            {
                <EditForm Model="Request" OnSubmit="OnComprar">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">@Product.Name</h5>
                            <h5 class="card-subtitle">Precio</h5>
                            <strong>@Product.UnitPrice</strong>
                            <div class="col-sm">
                                <input type="number" id="quantity" @bind:get="Request.Quantity" @bind:set="Calcular" />
                            </div>
                        </div>
                        <div class="card-footer">
                            <div class="row">
                                <div class="col-sm">
                                    <span>Total</span>
                                    <span>$ @Total.ToString("N2")</span>
                                </div>
                                <div class="col-sm align-content-end" style="text-align:end">
                                    <button class="btn btn-outline-primary" type="submit">Pagar</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </EditForm>
            }
            else
            {
                @if(Sale != null)
                {
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">VOUCHER</h5>
                            <h5 class="card-subtitle">@Product.Name</h5>
                            <div class="card-text">
                                <span>Nro. Operation</span>
                                <span>@Sale.VoucherNumber</span>
                            </div>
                            <div class="card-text">
                                <span>Cliente</span>
                                <span>@Sale.CustomerName</span>
                            </div>
                            <div class="card-text">
                                <span>Cantidad</span>
                                <span>@Sale.Quantity</span>
                            </div>
                            <div class="card-text">
                                <span>Fecha de Pago</span>
                                <span>@Sale.DateSale</span>
                            </div>
                            <div class="card-text">
                                <span>TOTAL</span>
                                <span>$ @Sale.Total.ToString("N2")</span>
                            </div>
                        </div>
                        <div class="card-footer">
                            <a href="/" class="btn btn-success" >Volver a comprar</a>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>

@code {

    [Parameter]
    public int Id { get; set; }

    public ResponseDTOProduct Product { get; set; } = new ResponseDTOProduct();
    public decimal Total { get; set; }
    public bool IsLoading { get; set; }

    private BuyStatus Status { get; set; } = BuyStatus.Resume;
    private RequestDTOSale Request { get; set; } = new RequestDTOSale();
    private ResponseDTOSale Sale { get; set; } = new ResponseDTOSale();

    protected override async Task OnInitializedAsync()
    {
        Product = await ProxyProduct.GetByIdAsync(Id);
    }

    private async Task Comprar()
    {
        var auth = (AuthenticationService)AuthenticationStateProvider;
        var claim = await auth.GetAuthenticationStateAsync();
        if (!claim.User.Identity!.IsAuthenticated)
        {
            ToastService.ShowWarning("Debe iniciar sesión");
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            Status = BuyStatus.Compra;
        }
    }

    private void Calcular(short value)
    {
        Total = value * Product.UnitPrice;
        Request.Quantity = value;
    }

    private async Task OnComprar()
    {
        try
        {
            IsLoading = true;

            Request.ProductId = Id;
            var saleId = await ProxySale.CreateSale(Request);
            Sale = await ProxySale.GetById(saleId);

            Status = BuyStatus.Voucher;
        }
        catch (Exception ex)
        {
            ToastService.ShowError(ex.Message);
        }
        finally
        {
            IsLoading = false;
        }
    }
}
