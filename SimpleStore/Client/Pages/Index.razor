@page "/{Parameter?}"

@inject ProxyHome ProxyHome
@inject ProxyProduct ProxyProduct
@inject NavigationManager NavigationManager
@inject IToastService ToastService

<PageTitle>Simple Store</PageTitle>

<div class="container">

    <div style="margin-top:10px;flex-wrap:wrap;gap:1em;display:flex;">
        @if (Products != null && Products.Count > 0)
        {
            @foreach (var product in Products)
            {
                <ProductCardComponent OnClick="OnClickCard" Product="product" />
            }
        }
        else
        {
            <p>No se encontró coincidencias.</p>
        }
    </div>
</div>

<LoadingComponent IsLoading="IsLoading"></LoadingComponent>

@code {
    [Parameter]
    public string? Parameter { get; set; }

    public bool IsLoading { get; set; }
    public ICollection<ResponseDTOProduct>? Products { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            IsLoading = true;
            var response = await ProxyProduct.ListAsync(null, 1, 50);
            if (response.Success) Products = response.Data;
        }
        catch (Exception ex)
        {
            ToastService.ShowError(ex.Message);
        }
        finally
        {
            IsLoading = false;
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            IsLoading = true;

            int Id;
            bool IsNumeric = int.TryParse(Parameter, out Id);
            if (IsNumeric)
            {
                var response = await ProxyProduct.ListAsync(Id);
                if (response.Success) Products = response.Data;
            }
            else
            {
                var response = await ProxyProduct.ListAsync(null, 1, 50);
                if (response.Success) Products = response.Data;
            }
            
        }
        catch (Exception ex)
        {
            ToastService.ShowError(ex.Message);
        }
        finally
        {
            IsLoading = false;
        }
    }

    private void OnClickCard(int id) => NavigationManager.NavigateTo($"/buy-page/{id}");
}